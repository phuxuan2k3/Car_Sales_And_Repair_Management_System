<div class="container-fluid">
    {{> nav}}
    <div class="row">
        <div class="col-3">
            {{!-- Left slide --}}
            <form class="h-100 bg-white w-100 p-3">
                {{!-- Type --}}
                <div class="checkBox mb-3">
                    <p class="fs-8">Type</p>
                    <div class="ms-3">
                        <div class="form-check" id="TypeCheckList">
                        </div>
                    </div>
                </div>
                {{!-- Capacity --}}
                <div class="checkBox mb-3">
                    <p class="fs-8">Brand</p>
                    <div class="ms-3">
                        <div class="form-check" id="BrandCheckList">
                        </div>
                    </div>
                </div>
                {{!-- Price --}}
                <div class="checkBox mb-3">
                    <p class="fs-8">Price</p>
                    <div class="ms-3 ">
                        <input type="range" class="form-range" min="0" max="5" step="0.5" id="customRange3">
                    </div>
                </div>
            </form>
        </div>
        <div class="col-9">
            {{!-- Main content --}}
            <div class="bg-white d-flex flex-column h-100" id="MainContent">
                <div class="d-flex mb-auto flex-wrap  w-100 p-3" id="CarList">
                </div>
                <nav class="d-flex justify-content-center" aria-label="Page navigation example">
                    <ul class="pagination">
                        <li class="page-item">
                            <a class="page-link" onclick="prePage()" href="#" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>
                        <li class="page-item"><a class="page-link" id="PageInfo" ></a></li>
                        <li class="page-item">
                            <a class="page-link" onclick="nextPage()" href="#" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>
    </div>
    {{>footer}}
</div>


<script>
    let page = 1;
    let per_page = 6;
    let carData;
    let typeData;
    let brandData;
    let TypeCheckList = $('#TypeCheckList');
    let BrandCheckList = $('#BrandCheckList');
    let CarList = $('#CarList');
    let PageInfo = $('#PageInfo');
    let totalPage;

    TypeCheckList.on('input', async (e) => {
        page = 1;
        await updateCarData();
        updatePageInfo();
    })

    BrandCheckList.on('input', async (e) => {
        page = 1;
        await updateCarData();
        updatePageInfo();
    })

    const prePage = async () => {
        if(page <= 1) return;
        page -= 1;
        await updateCarData();
        updatePageInfo();
    }

    const nextPage = async () => {
        if(page >= totalPage) return;
        page += 1;
        await updateCarData();
        updatePageInfo();
    }

    const fetchData = async (url) => {
        const rs = await fetch(url);
        data = await rs.json();
        return data;
    }

    const updateCarData = async () => {
        let checkedType = $('.typeOption:checked');
        let checkedBrand = $('.brandOption:checked');
        let queryElement = [];
        let brandArr = [];
        checkedBrand.each((index, e) => {
            brandArr.push(`brand=${$(e).val()}`);
        });
        let typeArr = [];
        checkedType.each((index, e) => {
            typeArr.push(`type=${$(e).val()}`);
        });
        if (brandArr.length > 0) queryElement.push(brandArr.join('&'));
        if (typeArr.length > 0) queryElement.push(typeArr.join('&'));
        let query = queryElement.join('&');
        let url = `/api/car/car_page?${query}&page=${page}&per_page=${per_page}`
        const rsData = await fetchData(url);
        carData = rsData.data;
        totalPage = rsData.totalPage;
        await generateCarInfo();
    }

    const generateCarInfo = async () => {
        CarList.empty();
        for (const car of carData) {
            CarList.append(`
                <div class="carInfo">
                    <div class="card ms-4 me-4 mb-3 " style="width: 18rem; height: 30rem">
                        <div class="card-body">
                            <p class="card-text fw-bold fs-2 mb-0">${car.car_name}</p>
                            <p class="fw-bold fs-8  text-opacity-25 textPrimary opacity4">${car.type}</p>
                        </div>
                        <img src="/images/car.png" class="w-100" alt="...">
                        <div class="card-body d-flex flex-row justify-content-between opacity4 textPrimary">
                            <div class="d-flex flex-row align-items-center ">
                                <i class="fa-solid  fa-user-group"></i>
                                <p class="m-0 ms-1">${car.quantity} people</p>
                            </div>
                        </div>
                        <div class="card-body d-flex flex-row justify-content-between  textPrimary">
                            <div class="fs-4">${car.price}vnÄ‘</div>
                            <button type="button" class="btn border-0 btn-primary bgPrimary">
                                BUY NOW
                            </button>
                        </div>
                    </div>
                </div>
            `)
        }
    }

    const pageInit = async () => {
        typeData = await fetchData('/api/car/type');
        brandData = await fetchData('/api/car/brand');
        const rsData = await fetchData(`/api/car/car_page?&page=${page}&per_page=${per_page}`)
        carData = rsData.data;
        totalPage = rsData.totalPage;
        await generateCarInfo();
        for (const e of typeData) {
            TypeCheckList.append(`
            <div>
                            <input class="form-check-input typeOption" type="checkbox" value="${e.type}" id="${e.type}">
                            <label class="form-check-label" for="${e.type}">
                               ${e.type}
                            </label>
            </div>
            `)
        }
        for (const e of brandData) {
            BrandCheckList.append(`
            <div>
                            <input class="form-check-input brandOption" type="checkbox" value="${e.brand}" id="${e.brand}">
                            <label class="form-check-label" for="${e.brand}">
                               ${e.brand}
                            </label>
            </div>
            `)
        }
        updatePageInfo();
    }

    const updatePageInfo = async () => {
        PageInfo.text(`${page}/${totalPage}`)
    }

    pageInit();
</script>